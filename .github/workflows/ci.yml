name: ci
on:
  push:
    branches:
      - ['main', '41-set-up-test-coverage-ci']
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ["3.11."]
      # - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      # - uses: actions/cache@v3
      #   with:
      #     key: mkdocs-material-${{ env.cache_id }}
      #     path: .cache
      #     restore-keys: |
      #       mkdocs-material-
      - name: Run pre-commit tests
        uses: pre-commit/action@main

      - name: Install with all components for testing
        run: poetry install --with docs --with dev --with jupyter --with server

      - name: Run pytest
        run: poetry run pytest

      - name: Python Coverage Comment
        uses: py-cov-action/python-coverage-comment-action@v2.2.0

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
          name: python-coverage-comment-action

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: "coverage"

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  deploy:
    name: MkDocs deploy
    runs-on: ubuntu-latest
    needs: [test, coverage]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install poetry
      - run: poetry install --with docs --with dev --with jupyter --with server
      - run: poetry run mkdocs gh-deploy --force
